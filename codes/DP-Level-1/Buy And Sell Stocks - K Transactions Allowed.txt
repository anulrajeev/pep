#include <iostream>
#include <vector>
#include <climits>

using namespace std;

int f(vector<int> &A, int n, int k)
{
    if(k==0 || n==0)
        return 0;
    int res=f(A,n-1,k);
    for(int i=0;i<n;i++)
        res=max(res, f(A,i,k-1)+A[n-1]-A[i]);
    return res;
    
}


int transactions(vector<int> A, int k) 
{
    int n=A.size();
    //return f(A,n,k);
    
    int dp[n+1][k+1];
    for(int i=0;i<=n;i++)
        dp[i][0]=0;
    for(int j=0;j<=k;j++)
        dp[0][j]=0;
    for(int i=1;i<=n;i++)
        for(int j=1;j<=k;j++)
            {
                dp[i][j]=dp[i-1][j];
                for(int p=0;p<i;p++)
                    dp[i][j]=max(dp[i][j], dp[p][j-1]+A[i-1]-A[p]);
            }
  
    return dp[n][k];
}

int main() {

  int n;
  cin >> n;
  vector<int> arr(n, 0);

  for (int i = 0; i < n; i++)
  {
    cin >> arr[i];
  }
  int k ;
  cin >> k;

  cout<<transactions(arr, k);

  return 0;
}
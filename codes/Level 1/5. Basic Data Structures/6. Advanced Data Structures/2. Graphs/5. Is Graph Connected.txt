#include <bits/stdc++.h>
using namespace std;
typedef vector<int> vi;
typedef vector<vi> vvi;

void DFSRec(vi adj[], int V, int u, bool visited[])
{
	visited[u]=true;
	for(int v : adj[u])
		if(visited[v]==false)
			DFSRec(adj,V,v,visited);
	
}

bool DFS(vi adj[], int V)
{
	bool visited[V]={false};
	DFSRec(adj,V,0,visited);
	for(int i=0;i<V;i++)
		if(visited[i]==false)
			return false;
	return true;
}


int main()
{
  	int src,dest, criteria, k;
  	int V, edge_count;
  	int u,v,wt;
  	cin>>V>>edge_count;
  	vi adj[V];
  	for(int i=0;i<edge_count;i++)
  	{
  		cin>>u>>v>>wt;
  		adj[u].push_back(v);
  		adj[v].push_back(u);
  
   	}
  	 cout<<(DFS(adj,V)?"true":"false");
  	 return 0;
}
#include<iostream>
#include <string>
#include <stack>

using namespace std;
//by taking into consideration the negative inputs

class MinStack {
  stack<int> st;
  int minVal;


public:
  int size() {
    st.size();
  }

public:
  void push(int x) {
    if(st.size()==0)
    {
        st.push(x);
        minVal=x;
    }
    else if(x>minVal)
        st.push(x);
    else
    {
        st.push(2*x-minVal);
        minVal=x;
    }
  }

public:
  int pop() {
    if(st.size()==0)
    {
        cout<<"Stack underflow
";
        return -1;
    }
    else if(st.top()>minVal)
        {
            int ans=st.top();
            st.pop();
            return ans;
        }
    else
    {
        int ans=minVal;
        minVal=2*minVal-st.top();
        st.pop();
        return ans;
    }
  }

public:
  int top() {
    if(st.size()==0)
    {
        cout<<"Stack underflow
";
        return -1;
    }
    else if(st.top()>minVal)
        return st.top();
    else
        return minVal;
  }

public:
  int min() 
  {
    if(st.size()==0)
        {
        cout<<"Stack underflow
";
        return -1;
        }
    return minVal;
  }

};


int main() {
  MinStack st;

  string str;
  cin >> str;

  while (str != "quit") {

    if (str == "push") {
      int val;
      cin >> val;
      st.push(val);
    }
    else if (str == "pop") {
      int val = st.pop();
      if (val != -1) {
        cout << val << endl;
      }
    }
    else if (str == "top") {
      int val = st.top();
      if (val != -1) {
        cout << val << endl;
      }
    }
    else if (str == "size") {
      cout << st.size() << endl;
    }
    else if (str == "min" ) {
      int val = st.min();
      if (val != -1) {
        cout << val << endl;
      }
    }

    cin >> str;

  }

}
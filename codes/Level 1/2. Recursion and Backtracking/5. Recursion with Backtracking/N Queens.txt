#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vll;
typedef vector<vll> vvll;
typedef vector<bool> vb;
typedef vector<vb> vvb;
typedef vector<string> vs;
typedef vector<char> vc;
typedef vector<vc> vvc;
typedef pair<int, int> pii;

ll mod = 1000000009;

void _main();
int main(){

	_main();
	return 0;
}

bool isSafe(vvi &grid, int r, int c)
{
	int n=grid.size();
	if(grid[r][c])
		return false;
	for(int j=0;j<c;j++)
		if(grid[r][j])
			return false;
	for(int i=0;i<r;i++)
		if(grid[i][c])
			return false;
	for(int i=r,j=c;i>=0&&j>=0;i--,j--)
		if(grid[i][j])
			return false;
	for(int i=r,j=c;i<n&&j>=0;i++,j--)
		if(grid[i][j])
			return false;
	return true;		
}

void NQueens(int col, vvi &grid, string psf)
{
	int n=grid.size();
	if(col==n)
		cout<<psf<<".
";
	else
		for(int row=0;row<n;row++)
			if(isSafe(grid,row,col))
			{
				grid[row][col]=1;
				NQueens(col+1,grid,psf+to_string(col)+"-"+to_string(row)+", ");
				grid[row][col]=0;
			}
}

void _main()
{
	int n;
	cin>>n;
	vvi grid(n,vi(n,0));
	NQueens(0,grid,"");  	

}
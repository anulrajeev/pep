#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vll;
typedef vector<vll> vvll;
typedef vector<bool> vb;
typedef vector<vb> vvb;
typedef vector<string> vs;
typedef vector<char> vc;
typedef vector<vc> vvc;
typedef pair<int, int> pii;

ll mod = 1000000009;

void _main();
int main(){
 
	_main();
	return 0;
}

void display(vvi &grid)
{
	int n=grid.size();
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
			cout<<grid[i][j]<<' ';
		cout<<'
';
	}
cout<<'
';
}

void knightsTour(vvi &grid, int i, int j, int count)
{
	int n=grid.size();
	if(i<0 || j<0 || i>=n || j>=n || grid[i][j])
		return;
	else if(count==n*n)
	{
		grid[i][j]=count;
		display(grid);
		grid[i][j]=0;
	}
	else
	{
		grid[i][j]=count;
		knightsTour(grid,i-2,j+1,count+1);
		knightsTour(grid,i-1,j+2,count+1);
		knightsTour(grid,i+1,j+2,count+1);
		knightsTour(grid,i+2,j+1,count+1);
		
		knightsTour(grid,i+2,j-1,count+1);
		knightsTour(grid,i+1,j-2,count+1);		
		knightsTour(grid,i-1,j-2,count+1);
		knightsTour(grid,i-2,j-1,count+1);
		grid[i][j]=0;
	}
}
void _main()
{
  	int n,row,col;
  	cin>>n>>row>>col;
  	vvi grid(n,vi(n,0));
  	knightsTour(grid,row,col,1);

}
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vll;
typedef vector<vll> vvll;
typedef vector<bool> vb;
typedef vector<vb> vvb;
typedef vector<string> vs;
typedef vector<char> vc;
typedef vector<vc> vvc;
typedef pair<int, int> pii;

ll mod = 1000000007;

void _main();
int main(){
 #ifndef ONLINE_JUDGE
    // for getting input from input.txt
    freopen("input.txt", "r", stdin);
    // for writing output to output.txt
    freopen("output.txt", "w", stdout);
 #endif
	_main();
	return 0;
}

ll arithmeticSubsequesnces(int A[], int n)
{
	ll ans=0;
	vector<unordered_map<ll,ll>> dp(n);
	for(int i=1;i<n;i++)
	{
		unordered_map<ll,ll> &m = dp[i];
		for(int j=0;j<i;j++)
		{
			ll d = ll(A[i])-ll(A[j]);
			if(d<=INT_MIN||d>=INT_MAX)
				continue;
			if(dp[j].count(d))
				{
					ans+=dp[j][d];
					m[d]+=dp[j][d]+1;
				}
				else
					m[d]++;
		}
	}
	return ans;
}


void _main()
{
  	int n;
  	cin>>n;
  	int A[n];
  	for(int i=0;i<n;i++)
  		cin>>A[i];
  	cout<<arithmeticSubsequesnces(A,n);
}




/*

cases to be taken care of :  

1. use long long inorder to take care of corner cases
2. since we deal with integers, the max diff that can be there is INT_MAX or INT_MIN. Anything greater/smaller than this won't be accpeted, have a check on that.


*/